name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: .env.production

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '20.14.0'

      - name: Install dependencies
        run: npm install

      - name: Build the application
        run: npm run build

      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}

        run: |
          echo "${SSH_PRIVATE_KEY}" > private_key.pem
          chmod 400 private_key.pem
          openssl rsa -in private_key.pem -text -noout

          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST << 'EOF'

            cd /etc
    
            echo "HOST=${{ secrets.EC2_HOST }}" > app.env
            echo "USER=${{ secrets.EC2_USER }}" >> app.env
            echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> app.env
            echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}" >> app.env
            echo "BUCKET_REGION=${{ secrets.BUCKET_REGION }}" >> app.env
            echo "ACCESS_KEY=${{ secrets.ACCESS_KEY }}" >> app.env
            echo "SECRET_ACCESS_KEY=${{ secrets.SECRET_ACCESS_KEY }}" >> app.env
            echo "PORT=${{ secrets.PORT }}" >> app.env
            echo "DB_URI=${{ secrets.DB_URI }}" >> app.env
            echo "SALT_WORK_FACTOR=${{ secrets.SALT_WORK_FACTOR }}" >> app.env
            echo "ACCESS_TOKEN_TTL=${{ secrets.ACCESS_TOKEN_TTL }}" >> app.env
            echo "REFRESH_TOKEN_TTL=${{ secrets.REFRESH_TOKEN_TTL }}" >> app.env
            echo "ORIGIN=${{ secrets.ORIGIN }}" >> app.env
            echo "S3_BUCKET_URL=${{ secrets.S3_BUCKET_URL }}" >> app.env
            echo "DOMAIN=${{ secrets.DOMAIN }}" >> app.env
            echo "PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}" >> app.env
            echo "PUBLIC_KEY=${{ secrets.PUBLIC_KEY }}" >> app.env
            echo "SES_ACCESS_KEY=${{ secrets.SES_ACCESS_KEY }}" >> app.env
            echo "SES_SECRET_ACCESS_KEY=${{ secrets.SES_SECRET_ACCESS_KEY }}" >> app.env
            echo "SES_EMAIL_SOURCE=${{ secrets.SES_EMAIL_SOURCE }}" >> app.env 

            chmod 600 app.env
            sudo chown ubuntu:ubuntu app.env

            cd /home/ubuntu/sg_server
            git pull origin main
            npm install
            npm run build
            sudo systemctl restart myapp.service
          EOF
